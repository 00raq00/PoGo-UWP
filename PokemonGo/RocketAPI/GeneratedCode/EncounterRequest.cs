// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EncounterRequest.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PokemonGo.RocketAPI.GeneratedCode {

  /// <summary>Holder for reflection information generated from EncounterRequest.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class EncounterRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for EncounterRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EncounterRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZFbmNvdW50ZXJSZXF1ZXN0LnByb3RvEiFQb2tlbW9uR28uUm9ja2V0QVBJ",
            "LkdlbmVyYXRlZENvZGUilgYKEEVuY291bnRlclJlcXVlc3QSEAoIdW5rbm93",
            "bjEYASABKAUSDgoGcnBjX2lkGAMgASgDEk4KCHJlcXVlc3RzGAQgAygLMjwu",
            "UG9rZW1vbkdvLlJvY2tldEFQSS5HZW5lcmF0ZWRDb2RlLkVuY291bnRlclJl",
            "cXVlc3QuUmVxdWVzdHMSTgoIdW5rbm93bjYYBiABKAsyPC5Qb2tlbW9uR28u",
            "Um9ja2V0QVBJLkdlbmVyYXRlZENvZGUuRW5jb3VudGVyUmVxdWVzdC5Vbmtu",
            "b3duNhIQCghsYXRpdHVkZRgHIAEoBhIRCglsb25naXR1ZGUYCCABKAYSEAoI",
            "YWx0aXR1ZGUYCSABKAYSRgoEYXV0aBgLIAEoCzI4LlBva2Vtb25Hby5Sb2Nr",
            "ZXRBUEkuR2VuZXJhdGVkQ29kZS5FbmNvdW50ZXJSZXF1ZXN0LkF1dGgSEQoJ",
            "dW5rbm93bjEyGAwgASgDGikKCFJlcXVlc3RzEgwKBHR5cGUYASABKAUSDwoH",
            "bWVzc2FnZRgCIAEoDBpaCg9SZXF1ZXN0c01lc3NhZ2USDwoHY2VsbElkcxgB",
            "IAEoDBIRCgl1bmtub3duMTQYAiABKAwSEAoIbGF0aXR1ZGUYAyABKAYSEQoJ",
            "bG9uZ2l0dWRlGAQgASgGGhwKDFNldHRpbmdzR3VpZBIMCgRndWlkGAEgASgM",
            "GhQKBFRpbWUSDAoEdGltZRgBIAEoAxocCghVbmtub3duMxIQCgh1bmtub3du",
            "NBgBIAEoCRqTAQoIVW5rbm93bjYSEAoIdW5rbm93bjEYASABKAUSVwoIdW5r",
            "bm93bjIYAiABKAsyRS5Qb2tlbW9uR28uUm9ja2V0QVBJLkdlbmVyYXRlZENv",
            "ZGUuRW5jb3VudGVyUmVxdWVzdC5Vbmtub3duNi5Vbmtub3duMhocCghVbmtu",
            "b3duMhIQCgh1bmtub3duMRgBIAEoDBo/CgRBdXRoEhEKCXVua25vd243MRgB",
            "IAEoDBIRCgl0aW1lc3RhbXAYAiABKAMSEQoJdW5rbm93bjczGAMgASgMYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest), global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Parser, new[]{ "Unknown1", "RpcId", "Requests", "Unknown6", "Latitude", "Longitude", "Altitude", "Auth", "Unknown12" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Requests), global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Requests.Parser, new[]{ "Type", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.RequestsMessage), global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.RequestsMessage.Parser, new[]{ "CellIds", "Unknown14", "Latitude", "Longitude" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.SettingsGuid), global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.SettingsGuid.Parser, new[]{ "Guid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Time), global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Time.Parser, new[]{ "Time_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown3), global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown3.Parser, new[]{ "Unknown4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6), global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6.Parser, new[]{ "Unknown1", "Unknown2" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6.Types.Unknown2), global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6.Types.Unknown2.Parser, new[]{ "Unknown1" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Auth), global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Auth.Parser, new[]{ "Unknown71", "Timestamp", "Unknown73" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EncounterRequest : pb::IMessage<EncounterRequest> {
    private static readonly pb::MessageParser<EncounterRequest> _parser = new pb::MessageParser<EncounterRequest>(() => new EncounterRequest());
    public static pb::MessageParser<EncounterRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequestReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EncounterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EncounterRequest(EncounterRequest other) : this() {
      unknown1_ = other.unknown1_;
      rpcId_ = other.rpcId_;
      requests_ = other.requests_.Clone();
      Unknown6 = other.unknown6_ != null ? other.Unknown6.Clone() : null;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      altitude_ = other.altitude_;
      Auth = other.auth_ != null ? other.Auth.Clone() : null;
      unknown12_ = other.unknown12_;
    }

    public EncounterRequest Clone() {
      return new EncounterRequest(this);
    }

    /// <summary>Field number for the "unknown1" field.</summary>
    public const int Unknown1FieldNumber = 1;
    private int unknown1_;
    public int Unknown1 {
      get { return unknown1_; }
      set {
        unknown1_ = value;
      }
    }

    /// <summary>Field number for the "rpc_id" field.</summary>
    public const int RpcIdFieldNumber = 3;
    private long rpcId_;
    public long RpcId {
      get { return rpcId_; }
      set {
        rpcId_ = value;
      }
    }

    /// <summary>Field number for the "requests" field.</summary>
    public const int RequestsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Requests> _repeated_requests_codec
        = pb::FieldCodec.ForMessage(34, global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Requests.Parser);
    private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Requests> requests_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Requests>();
    public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Requests> Requests {
      get { return requests_; }
    }

    /// <summary>Field number for the "unknown6" field.</summary>
    public const int Unknown6FieldNumber = 6;
    private global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6 unknown6_;
    public global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6 Unknown6 {
      get { return unknown6_; }
      set {
        unknown6_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 7;
    private ulong latitude_;
    public ulong Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 8;
    private ulong longitude_;
    public ulong Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "altitude" field.</summary>
    public const int AltitudeFieldNumber = 9;
    private ulong altitude_;
    public ulong Altitude {
      get { return altitude_; }
      set {
        altitude_ = value;
      }
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 11;
    private global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Auth auth_;
    /// <summary>
    /// AuthInfo auth = 10;
    /// </summary>
    public global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Auth Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "unknown12" field.</summary>
    public const int Unknown12FieldNumber = 12;
    private long unknown12_;
    public long Unknown12 {
      get { return unknown12_; }
      set {
        unknown12_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EncounterRequest);
    }

    public bool Equals(EncounterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Unknown1 != other.Unknown1) return false;
      if (RpcId != other.RpcId) return false;
      if(!requests_.Equals(other.requests_)) return false;
      if (!object.Equals(Unknown6, other.Unknown6)) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      if (Altitude != other.Altitude) return false;
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Unknown12 != other.Unknown12) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Unknown1 != 0) hash ^= Unknown1.GetHashCode();
      if (RpcId != 0L) hash ^= RpcId.GetHashCode();
      hash ^= requests_.GetHashCode();
      if (unknown6_ != null) hash ^= Unknown6.GetHashCode();
      if (Latitude != 0UL) hash ^= Latitude.GetHashCode();
      if (Longitude != 0UL) hash ^= Longitude.GetHashCode();
      if (Altitude != 0UL) hash ^= Altitude.GetHashCode();
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Unknown12 != 0L) hash ^= Unknown12.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Unknown1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Unknown1);
      }
      if (RpcId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RpcId);
      }
      requests_.WriteTo(output, _repeated_requests_codec);
      if (unknown6_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Unknown6);
      }
      if (Latitude != 0UL) {
        output.WriteRawTag(57);
        output.WriteFixed64(Latitude);
      }
      if (Longitude != 0UL) {
        output.WriteRawTag(65);
        output.WriteFixed64(Longitude);
      }
      if (Altitude != 0UL) {
        output.WriteRawTag(73);
        output.WriteFixed64(Altitude);
      }
      if (auth_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Auth);
      }
      if (Unknown12 != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Unknown12);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Unknown1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown1);
      }
      if (RpcId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RpcId);
      }
      size += requests_.CalculateSize(_repeated_requests_codec);
      if (unknown6_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown6);
      }
      if (Latitude != 0UL) {
        size += 1 + 8;
      }
      if (Longitude != 0UL) {
        size += 1 + 8;
      }
      if (Altitude != 0UL) {
        size += 1 + 8;
      }
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Unknown12 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Unknown12);
      }
      return size;
    }

    public void MergeFrom(EncounterRequest other) {
      if (other == null) {
        return;
      }
      if (other.Unknown1 != 0) {
        Unknown1 = other.Unknown1;
      }
      if (other.RpcId != 0L) {
        RpcId = other.RpcId;
      }
      requests_.Add(other.requests_);
      if (other.unknown6_ != null) {
        if (unknown6_ == null) {
          unknown6_ = new global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6();
        }
        Unknown6.MergeFrom(other.Unknown6);
      }
      if (other.Latitude != 0UL) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0UL) {
        Longitude = other.Longitude;
      }
      if (other.Altitude != 0UL) {
        Altitude = other.Altitude;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          auth_ = new global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Auth();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Unknown12 != 0L) {
        Unknown12 = other.Unknown12;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Unknown1 = input.ReadInt32();
            break;
          }
          case 24: {
            RpcId = input.ReadInt64();
            break;
          }
          case 34: {
            requests_.AddEntriesFrom(input, _repeated_requests_codec);
            break;
          }
          case 50: {
            if (unknown6_ == null) {
              unknown6_ = new global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6();
            }
            input.ReadMessage(unknown6_);
            break;
          }
          case 57: {
            Latitude = input.ReadFixed64();
            break;
          }
          case 65: {
            Longitude = input.ReadFixed64();
            break;
          }
          case 73: {
            Altitude = input.ReadFixed64();
            break;
          }
          case 90: {
            if (auth_ == null) {
              auth_ = new global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Auth();
            }
            input.ReadMessage(auth_);
            break;
          }
          case 96: {
            Unknown12 = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EncounterRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Requests : pb::IMessage<Requests> {
        private static readonly pb::MessageParser<Requests> _parser = new pb::MessageParser<Requests>(() => new Requests());
        public static pb::MessageParser<Requests> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Requests() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Requests(Requests other) : this() {
          type_ = other.type_;
          message_ = other.message_;
        }

        public Requests Clone() {
          return new Requests(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private int type_;
        public int Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private pb::ByteString message_ = pb::ByteString.Empty;
        public pb::ByteString Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Requests);
        }

        public bool Equals(Requests other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Message != other.Message) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Type);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Message);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
          }
          return size;
        }

        public void MergeFrom(Requests other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                Type = input.ReadInt32();
                break;
              }
              case 18: {
                Message = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RequestsMessage : pb::IMessage<RequestsMessage> {
        private static readonly pb::MessageParser<RequestsMessage> _parser = new pb::MessageParser<RequestsMessage>(() => new RequestsMessage());
        public static pb::MessageParser<RequestsMessage> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Descriptor.NestedTypes[1]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public RequestsMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        public RequestsMessage(RequestsMessage other) : this() {
          cellIds_ = other.cellIds_;
          unknown14_ = other.unknown14_;
          latitude_ = other.latitude_;
          longitude_ = other.longitude_;
        }

        public RequestsMessage Clone() {
          return new RequestsMessage(this);
        }

        /// <summary>Field number for the "cellIds" field.</summary>
        public const int CellIdsFieldNumber = 1;
        private pb::ByteString cellIds_ = pb::ByteString.Empty;
        public pb::ByteString CellIds {
          get { return cellIds_; }
          set {
            cellIds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "unknown14" field.</summary>
        public const int Unknown14FieldNumber = 2;
        private pb::ByteString unknown14_ = pb::ByteString.Empty;
        public pb::ByteString Unknown14 {
          get { return unknown14_; }
          set {
            unknown14_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "latitude" field.</summary>
        public const int LatitudeFieldNumber = 3;
        private ulong latitude_;
        public ulong Latitude {
          get { return latitude_; }
          set {
            latitude_ = value;
          }
        }

        /// <summary>Field number for the "longitude" field.</summary>
        public const int LongitudeFieldNumber = 4;
        private ulong longitude_;
        public ulong Longitude {
          get { return longitude_; }
          set {
            longitude_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as RequestsMessage);
        }

        public bool Equals(RequestsMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CellIds != other.CellIds) return false;
          if (Unknown14 != other.Unknown14) return false;
          if (Latitude != other.Latitude) return false;
          if (Longitude != other.Longitude) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (CellIds.Length != 0) hash ^= CellIds.GetHashCode();
          if (Unknown14.Length != 0) hash ^= Unknown14.GetHashCode();
          if (Latitude != 0UL) hash ^= Latitude.GetHashCode();
          if (Longitude != 0UL) hash ^= Longitude.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (CellIds.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(CellIds);
          }
          if (Unknown14.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Unknown14);
          }
          if (Latitude != 0UL) {
            output.WriteRawTag(25);
            output.WriteFixed64(Latitude);
          }
          if (Longitude != 0UL) {
            output.WriteRawTag(33);
            output.WriteFixed64(Longitude);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (CellIds.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(CellIds);
          }
          if (Unknown14.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown14);
          }
          if (Latitude != 0UL) {
            size += 1 + 8;
          }
          if (Longitude != 0UL) {
            size += 1 + 8;
          }
          return size;
        }

        public void MergeFrom(RequestsMessage other) {
          if (other == null) {
            return;
          }
          if (other.CellIds.Length != 0) {
            CellIds = other.CellIds;
          }
          if (other.Unknown14.Length != 0) {
            Unknown14 = other.Unknown14;
          }
          if (other.Latitude != 0UL) {
            Latitude = other.Latitude;
          }
          if (other.Longitude != 0UL) {
            Longitude = other.Longitude;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                CellIds = input.ReadBytes();
                break;
              }
              case 18: {
                Unknown14 = input.ReadBytes();
                break;
              }
              case 25: {
                Latitude = input.ReadFixed64();
                break;
              }
              case 33: {
                Longitude = input.ReadFixed64();
                break;
              }
            }
          }
        }

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class SettingsGuid : pb::IMessage<SettingsGuid> {
        private static readonly pb::MessageParser<SettingsGuid> _parser = new pb::MessageParser<SettingsGuid>(() => new SettingsGuid());
        public static pb::MessageParser<SettingsGuid> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Descriptor.NestedTypes[2]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public SettingsGuid() {
          OnConstruction();
        }

        partial void OnConstruction();

        public SettingsGuid(SettingsGuid other) : this() {
          guid_ = other.guid_;
        }

        public SettingsGuid Clone() {
          return new SettingsGuid(this);
        }

        /// <summary>Field number for the "guid" field.</summary>
        public const int GuidFieldNumber = 1;
        private pb::ByteString guid_ = pb::ByteString.Empty;
        public pb::ByteString Guid {
          get { return guid_; }
          set {
            guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as SettingsGuid);
        }

        public bool Equals(SettingsGuid other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Guid != other.Guid) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Guid.Length != 0) hash ^= Guid.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Guid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Guid);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Guid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Guid);
          }
          return size;
        }

        public void MergeFrom(SettingsGuid other) {
          if (other == null) {
            return;
          }
          if (other.Guid.Length != 0) {
            Guid = other.Guid;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Guid = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Time : pb::IMessage<Time> {
        private static readonly pb::MessageParser<Time> _parser = new pb::MessageParser<Time>(() => new Time());
        public static pb::MessageParser<Time> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Descriptor.NestedTypes[3]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Time() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Time(Time other) : this() {
          time_ = other.time_;
        }

        public Time Clone() {
          return new Time(this);
        }

        /// <summary>Field number for the "time" field.</summary>
        public const int Time_FieldNumber = 1;
        private long time_;
        public long Time_ {
          get { return time_; }
          set {
            time_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Time);
        }

        public bool Equals(Time other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Time_ != other.Time_) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Time_ != 0L) hash ^= Time_.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Time_ != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Time_);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Time_ != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time_);
          }
          return size;
        }

        public void MergeFrom(Time other) {
          if (other == null) {
            return;
          }
          if (other.Time_ != 0L) {
            Time_ = other.Time_;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                Time_ = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Unknown3 : pb::IMessage<Unknown3> {
        private static readonly pb::MessageParser<Unknown3> _parser = new pb::MessageParser<Unknown3>(() => new Unknown3());
        public static pb::MessageParser<Unknown3> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Descriptor.NestedTypes[4]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Unknown3() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Unknown3(Unknown3 other) : this() {
          unknown4_ = other.unknown4_;
        }

        public Unknown3 Clone() {
          return new Unknown3(this);
        }

        /// <summary>Field number for the "unknown4" field.</summary>
        public const int Unknown4FieldNumber = 1;
        private string unknown4_ = "";
        public string Unknown4 {
          get { return unknown4_; }
          set {
            unknown4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Unknown3);
        }

        public bool Equals(Unknown3 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Unknown4 != other.Unknown4) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Unknown4.Length != 0) hash ^= Unknown4.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Unknown4.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Unknown4);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Unknown4.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Unknown4);
          }
          return size;
        }

        public void MergeFrom(Unknown3 other) {
          if (other == null) {
            return;
          }
          if (other.Unknown4.Length != 0) {
            Unknown4 = other.Unknown4;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Unknown4 = input.ReadString();
                break;
              }
            }
          }
        }

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Unknown6 : pb::IMessage<Unknown6> {
        private static readonly pb::MessageParser<Unknown6> _parser = new pb::MessageParser<Unknown6>(() => new Unknown6());
        public static pb::MessageParser<Unknown6> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Descriptor.NestedTypes[5]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Unknown6() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Unknown6(Unknown6 other) : this() {
          unknown1_ = other.unknown1_;
          Unknown2 = other.unknown2_ != null ? other.Unknown2.Clone() : null;
        }

        public Unknown6 Clone() {
          return new Unknown6(this);
        }

        /// <summary>Field number for the "unknown1" field.</summary>
        public const int Unknown1FieldNumber = 1;
        private int unknown1_;
        public int Unknown1 {
          get { return unknown1_; }
          set {
            unknown1_ = value;
          }
        }

        /// <summary>Field number for the "unknown2" field.</summary>
        public const int Unknown2FieldNumber = 2;
        private global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6.Types.Unknown2 unknown2_;
        public global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6.Types.Unknown2 Unknown2 {
          get { return unknown2_; }
          set {
            unknown2_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Unknown6);
        }

        public bool Equals(Unknown6 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Unknown1 != other.Unknown1) return false;
          if (!object.Equals(Unknown2, other.Unknown2)) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Unknown1 != 0) hash ^= Unknown1.GetHashCode();
          if (unknown2_ != null) hash ^= Unknown2.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Unknown1 != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Unknown1);
          }
          if (unknown2_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Unknown2);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Unknown1 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown1);
          }
          if (unknown2_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown2);
          }
          return size;
        }

        public void MergeFrom(Unknown6 other) {
          if (other == null) {
            return;
          }
          if (other.Unknown1 != 0) {
            Unknown1 = other.Unknown1;
          }
          if (other.unknown2_ != null) {
            if (unknown2_ == null) {
              unknown2_ = new global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6.Types.Unknown2();
            }
            Unknown2.MergeFrom(other.Unknown2);
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                Unknown1 = input.ReadInt32();
                break;
              }
              case 18: {
                if (unknown2_ == null) {
                  unknown2_ = new global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6.Types.Unknown2();
                }
                input.ReadMessage(unknown2_);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Unknown6 message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class Unknown2 : pb::IMessage<Unknown2> {
            private static readonly pb::MessageParser<Unknown2> _parser = new pb::MessageParser<Unknown2>(() => new Unknown2());
            public static pb::MessageParser<Unknown2> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Types.Unknown6.Descriptor.NestedTypes[0]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public Unknown2() {
              OnConstruction();
            }

            partial void OnConstruction();

            public Unknown2(Unknown2 other) : this() {
              unknown1_ = other.unknown1_;
            }

            public Unknown2 Clone() {
              return new Unknown2(this);
            }

            /// <summary>Field number for the "unknown1" field.</summary>
            public const int Unknown1FieldNumber = 1;
            private pb::ByteString unknown1_ = pb::ByteString.Empty;
            public pb::ByteString Unknown1 {
              get { return unknown1_; }
              set {
                unknown1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            public override bool Equals(object other) {
              return Equals(other as Unknown2);
            }

            public bool Equals(Unknown2 other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Unknown1 != other.Unknown1) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (Unknown1.Length != 0) hash ^= Unknown1.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (Unknown1.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(Unknown1);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (Unknown1.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown1);
              }
              return size;
            }

            public void MergeFrom(Unknown2 other) {
              if (other == null) {
                return;
              }
              if (other.Unknown1.Length != 0) {
                Unknown1 = other.Unknown1;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    Unknown1 = input.ReadBytes();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Auth : pb::IMessage<Auth> {
        private static readonly pb::MessageParser<Auth> _parser = new pb::MessageParser<Auth>(() => new Auth());
        public static pb::MessageParser<Auth> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.EncounterRequest.Descriptor.NestedTypes[6]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Auth() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Auth(Auth other) : this() {
          unknown71_ = other.unknown71_;
          timestamp_ = other.timestamp_;
          unknown73_ = other.unknown73_;
        }

        public Auth Clone() {
          return new Auth(this);
        }

        /// <summary>Field number for the "unknown71" field.</summary>
        public const int Unknown71FieldNumber = 1;
        private pb::ByteString unknown71_ = pb::ByteString.Empty;
        public pb::ByteString Unknown71 {
          get { return unknown71_; }
          set {
            unknown71_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 2;
        private long timestamp_;
        public long Timestamp {
          get { return timestamp_; }
          set {
            timestamp_ = value;
          }
        }

        /// <summary>Field number for the "unknown73" field.</summary>
        public const int Unknown73FieldNumber = 3;
        private pb::ByteString unknown73_ = pb::ByteString.Empty;
        public pb::ByteString Unknown73 {
          get { return unknown73_; }
          set {
            unknown73_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Auth);
        }

        public bool Equals(Auth other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Unknown71 != other.Unknown71) return false;
          if (Timestamp != other.Timestamp) return false;
          if (Unknown73 != other.Unknown73) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Unknown71.Length != 0) hash ^= Unknown71.GetHashCode();
          if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
          if (Unknown73.Length != 0) hash ^= Unknown73.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Unknown71.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Unknown71);
          }
          if (Timestamp != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Timestamp);
          }
          if (Unknown73.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Unknown73);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Unknown71.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown71);
          }
          if (Timestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
          }
          if (Unknown73.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown73);
          }
          return size;
        }

        public void MergeFrom(Auth other) {
          if (other == null) {
            return;
          }
          if (other.Unknown71.Length != 0) {
            Unknown71 = other.Unknown71;
          }
          if (other.Timestamp != 0L) {
            Timestamp = other.Timestamp;
          }
          if (other.Unknown73.Length != 0) {
            Unknown73 = other.Unknown73;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Unknown71 = input.ReadBytes();
                break;
              }
              case 16: {
                Timestamp = input.ReadInt64();
                break;
              }
              case 26: {
                Unknown73 = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
